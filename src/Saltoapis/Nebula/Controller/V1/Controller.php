<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: salto/nebula/controller/v1/controller.proto

namespace Saltoapis\Nebula\Controller\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The controller object
 *
 * Generated from protobuf message <code>salto.nebula.controller.v1.Controller</code>
 */
class Controller extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. Resource name of the controller. It must have the format of
     * `installations/{@*}controllers/*`. For example:
     * `installations/surelock-homes-hq/controller/dancing-men`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Display name of the controller.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     */
    protected $display_name = '';
    /**
     * Globally unique identifier that is used across all devices manufactured
     * by SALTO, including gateways, extenders, electronic locks and so on.
     *
     * Generated from protobuf field <code>optional string device_id = 3;</code>
     */
    protected $device_id = null;
    /**
     * The access points that the controller gives coverage to.
     *
     * Generated from protobuf field <code>repeated string access_points = 6;</code>
     */
    private $access_points;
    /**
     * Indicates whether this controller has been initialized or not. This
     * field cannot be modified using a standard
     * [`UpdateController`][salto.nebula.controller.v1.ControllerService.UpdateController]
     * operation. To change the value of this field, you must call
     * [`InitializeController`][salto.nebula.controller.v1.ControllerService.InitializeController].
     * If the value is `false` also applies to the case where the
     * initialization process has been initiated but where it has not finished.
     *
     * Generated from protobuf field <code>bool initialized = 7;</code>
     */
    protected $initialized = false;
    /**
     * Indicates whether this controller has pending updates or not. This
     * could be because there was a pending configuration or a firmware update
     * and is conditionally set based on the current installation settings.
     *
     * Generated from protobuf field <code>bool outdated = 8;</code>
     */
    protected $outdated = false;
    /**
     * Indicates whether this controller is connected or not. It's
     * considered connected if there has been at least one communication with it
     * within the last 10 minutes. The property is left unset if it is an
     * offline controller.
     *
     * Generated from protobuf field <code>optional bool connected = 9;</code>
     */
    protected $connected = null;
    /**
     * The last time an event was received.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp last_event_time = 10;</code>
     */
    protected $last_event_time = null;
    protected $parent_device;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Output only. Resource name of the controller. It must have the format of
     *           `installations/{@*}controllers/*`. For example:
     *           `installations/surelock-homes-hq/controller/dancing-men`.
     *     @type string $display_name
     *           Display name of the controller.
     *     @type string $device_id
     *           Globally unique identifier that is used across all devices manufactured
     *           by SALTO, including gateways, extenders, electronic locks and so on.
     *     @type string $gateway
     *           Parent name, when controller is connected to a gateway
     *     @type string $extender
     *           Parent name, when controller is connected to an extender
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $access_points
     *           The access points that the controller gives coverage to.
     *     @type bool $initialized
     *           Indicates whether this controller has been initialized or not. This
     *           field cannot be modified using a standard
     *           [`UpdateController`][salto.nebula.controller.v1.ControllerService.UpdateController]
     *           operation. To change the value of this field, you must call
     *           [`InitializeController`][salto.nebula.controller.v1.ControllerService.InitializeController].
     *           If the value is `false` also applies to the case where the
     *           initialization process has been initiated but where it has not finished.
     *     @type bool $outdated
     *           Indicates whether this controller has pending updates or not. This
     *           could be because there was a pending configuration or a firmware update
     *           and is conditionally set based on the current installation settings.
     *     @type bool $connected
     *           Indicates whether this controller is connected or not. It's
     *           considered connected if there has been at least one communication with it
     *           within the last 10 minutes. The property is left unset if it is an
     *           offline controller.
     *     @type \Google\Protobuf\Timestamp $last_event_time
     *           The last time an event was received.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Saltoapis\Nebula\Controller\V1\Controller::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. Resource name of the controller. It must have the format of
     * `installations/{@*}controllers/*`. For example:
     * `installations/surelock-homes-hq/controller/dancing-men`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Output only. Resource name of the controller. It must have the format of
     * `installations/{@*}controllers/*`. For example:
     * `installations/surelock-homes-hq/controller/dancing-men`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Display name of the controller.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Display name of the controller.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * Globally unique identifier that is used across all devices manufactured
     * by SALTO, including gateways, extenders, electronic locks and so on.
     *
     * Generated from protobuf field <code>optional string device_id = 3;</code>
     * @return string
     */
    public function getDeviceId()
    {
        return isset($this->device_id) ? $this->device_id : '';
    }

    public function hasDeviceId()
    {
        return isset($this->device_id);
    }

    public function clearDeviceId()
    {
        unset($this->device_id);
    }

    /**
     * Globally unique identifier that is used across all devices manufactured
     * by SALTO, including gateways, extenders, electronic locks and so on.
     *
     * Generated from protobuf field <code>optional string device_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDeviceId($var)
    {
        GPBUtil::checkString($var, True);
        $this->device_id = $var;

        return $this;
    }

    /**
     * Parent name, when controller is connected to a gateway
     *
     * Generated from protobuf field <code>string gateway = 4;</code>
     * @return string
     */
    public function getGateway()
    {
        return $this->readOneof(4);
    }

    public function hasGateway()
    {
        return $this->hasOneof(4);
    }

    /**
     * Parent name, when controller is connected to a gateway
     *
     * Generated from protobuf field <code>string gateway = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setGateway($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Parent name, when controller is connected to an extender
     *
     * Generated from protobuf field <code>string extender = 5;</code>
     * @return string
     */
    public function getExtender()
    {
        return $this->readOneof(5);
    }

    public function hasExtender()
    {
        return $this->hasOneof(5);
    }

    /**
     * Parent name, when controller is connected to an extender
     *
     * Generated from protobuf field <code>string extender = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setExtender($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * The access points that the controller gives coverage to.
     *
     * Generated from protobuf field <code>repeated string access_points = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAccessPoints()
    {
        return $this->access_points;
    }

    /**
     * The access points that the controller gives coverage to.
     *
     * Generated from protobuf field <code>repeated string access_points = 6;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAccessPoints($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->access_points = $arr;

        return $this;
    }

    /**
     * Indicates whether this controller has been initialized or not. This
     * field cannot be modified using a standard
     * [`UpdateController`][salto.nebula.controller.v1.ControllerService.UpdateController]
     * operation. To change the value of this field, you must call
     * [`InitializeController`][salto.nebula.controller.v1.ControllerService.InitializeController].
     * If the value is `false` also applies to the case where the
     * initialization process has been initiated but where it has not finished.
     *
     * Generated from protobuf field <code>bool initialized = 7;</code>
     * @return bool
     */
    public function getInitialized()
    {
        return $this->initialized;
    }

    /**
     * Indicates whether this controller has been initialized or not. This
     * field cannot be modified using a standard
     * [`UpdateController`][salto.nebula.controller.v1.ControllerService.UpdateController]
     * operation. To change the value of this field, you must call
     * [`InitializeController`][salto.nebula.controller.v1.ControllerService.InitializeController].
     * If the value is `false` also applies to the case where the
     * initialization process has been initiated but where it has not finished.
     *
     * Generated from protobuf field <code>bool initialized = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setInitialized($var)
    {
        GPBUtil::checkBool($var);
        $this->initialized = $var;

        return $this;
    }

    /**
     * Indicates whether this controller has pending updates or not. This
     * could be because there was a pending configuration or a firmware update
     * and is conditionally set based on the current installation settings.
     *
     * Generated from protobuf field <code>bool outdated = 8;</code>
     * @return bool
     */
    public function getOutdated()
    {
        return $this->outdated;
    }

    /**
     * Indicates whether this controller has pending updates or not. This
     * could be because there was a pending configuration or a firmware update
     * and is conditionally set based on the current installation settings.
     *
     * Generated from protobuf field <code>bool outdated = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setOutdated($var)
    {
        GPBUtil::checkBool($var);
        $this->outdated = $var;

        return $this;
    }

    /**
     * Indicates whether this controller is connected or not. It's
     * considered connected if there has been at least one communication with it
     * within the last 10 minutes. The property is left unset if it is an
     * offline controller.
     *
     * Generated from protobuf field <code>optional bool connected = 9;</code>
     * @return bool
     */
    public function getConnected()
    {
        return isset($this->connected) ? $this->connected : false;
    }

    public function hasConnected()
    {
        return isset($this->connected);
    }

    public function clearConnected()
    {
        unset($this->connected);
    }

    /**
     * Indicates whether this controller is connected or not. It's
     * considered connected if there has been at least one communication with it
     * within the last 10 minutes. The property is left unset if it is an
     * offline controller.
     *
     * Generated from protobuf field <code>optional bool connected = 9;</code>
     * @param bool $var
     * @return $this
     */
    public function setConnected($var)
    {
        GPBUtil::checkBool($var);
        $this->connected = $var;

        return $this;
    }

    /**
     * The last time an event was received.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp last_event_time = 10;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getLastEventTime()
    {
        return $this->last_event_time;
    }

    public function hasLastEventTime()
    {
        return isset($this->last_event_time);
    }

    public function clearLastEventTime()
    {
        unset($this->last_event_time);
    }

    /**
     * The last time an event was received.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp last_event_time = 10;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setLastEventTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->last_event_time = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getParentDevice()
    {
        return $this->whichOneof("parent_device");
    }

}

