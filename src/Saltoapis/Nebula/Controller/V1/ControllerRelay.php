<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: salto/nebula/controller/v1/controller.proto

namespace Saltoapis\Nebula\Controller\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Relay represents a configurable output from a controller that can be used to control
 * external devices such as doors or other electrical systems. Relays can be
 * located on the main controller board or on extension boards, with addressing
 * determined by dipswitch settings.
 *
 * Generated from protobuf message <code>salto.nebula.controller.v1.ControllerRelay</code>
 */
class ControllerRelay extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. Resource name of the controller relay. It must have the format of
     * `installations/{@*}controllers/{@*}relays/*`. For example:
     * `installations/surelock-homes-hq/controller/dancing-men/relays/first-floor`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Extension board address. Values range from 0-15, allowing for up to 16 boards in the system.
     * This field is not applicable for master boards or wall reader extension boards.
     *
     * Generated from protobuf field <code>optional int32 dip_switch = 2;</code>
     */
    protected $dip_switch = null;
    /**
     * Identifies the specific controller relay on the board (1-4). Board type determines
     * which controller relay IDs are actually available for configuration and use.
     *
     * Generated from protobuf field <code>int32 relay_id = 3;</code>
     */
    protected $relay_id = 0;
    protected $type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Output only. Resource name of the controller relay. It must have the format of
     *           `installations/{@*}controllers/{@*}relays/*`. For example:
     *           `installations/surelock-homes-hq/controller/dancing-men/relays/first-floor`.
     *     @type int $dip_switch
     *           Extension board address. Values range from 0-15, allowing for up to 16 boards in the system.
     *           This field is not applicable for master boards or wall reader extension boards.
     *     @type int $relay_id
     *           Identifies the specific controller relay on the board (1-4). Board type determines
     *           which controller relay IDs are actually available for configuration and use.
     *     @type \Saltoapis\Nebula\Controller\V1\ControllerRelay\DestinationOutput $destination_output
     *           Destination output configuration for this controller relay.
     *     @type \Saltoapis\Nebula\Controller\V1\ControllerRelay\Strike $strike
     *           Strike configuration for this controller relay.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Saltoapis\Nebula\Controller\V1\Controller::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. Resource name of the controller relay. It must have the format of
     * `installations/{@*}controllers/{@*}relays/*`. For example:
     * `installations/surelock-homes-hq/controller/dancing-men/relays/first-floor`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Output only. Resource name of the controller relay. It must have the format of
     * `installations/{@*}controllers/{@*}relays/*`. For example:
     * `installations/surelock-homes-hq/controller/dancing-men/relays/first-floor`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Extension board address. Values range from 0-15, allowing for up to 16 boards in the system.
     * This field is not applicable for master boards or wall reader extension boards.
     *
     * Generated from protobuf field <code>optional int32 dip_switch = 2;</code>
     * @return int
     */
    public function getDipSwitch()
    {
        return isset($this->dip_switch) ? $this->dip_switch : 0;
    }

    public function hasDipSwitch()
    {
        return isset($this->dip_switch);
    }

    public function clearDipSwitch()
    {
        unset($this->dip_switch);
    }

    /**
     * Extension board address. Values range from 0-15, allowing for up to 16 boards in the system.
     * This field is not applicable for master boards or wall reader extension boards.
     *
     * Generated from protobuf field <code>optional int32 dip_switch = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setDipSwitch($var)
    {
        GPBUtil::checkInt32($var);
        $this->dip_switch = $var;

        return $this;
    }

    /**
     * Identifies the specific controller relay on the board (1-4). Board type determines
     * which controller relay IDs are actually available for configuration and use.
     *
     * Generated from protobuf field <code>int32 relay_id = 3;</code>
     * @return int
     */
    public function getRelayId()
    {
        return $this->relay_id;
    }

    /**
     * Identifies the specific controller relay on the board (1-4). Board type determines
     * which controller relay IDs are actually available for configuration and use.
     *
     * Generated from protobuf field <code>int32 relay_id = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setRelayId($var)
    {
        GPBUtil::checkInt32($var);
        $this->relay_id = $var;

        return $this;
    }

    /**
     * Destination output configuration for this controller relay.
     *
     * Generated from protobuf field <code>.salto.nebula.controller.v1.ControllerRelay.DestinationOutput destination_output = 4;</code>
     * @return \Saltoapis\Nebula\Controller\V1\ControllerRelay\DestinationOutput|null
     */
    public function getDestinationOutput()
    {
        return $this->readOneof(4);
    }

    public function hasDestinationOutput()
    {
        return $this->hasOneof(4);
    }

    /**
     * Destination output configuration for this controller relay.
     *
     * Generated from protobuf field <code>.salto.nebula.controller.v1.ControllerRelay.DestinationOutput destination_output = 4;</code>
     * @param \Saltoapis\Nebula\Controller\V1\ControllerRelay\DestinationOutput $var
     * @return $this
     */
    public function setDestinationOutput($var)
    {
        GPBUtil::checkMessage($var, \Saltoapis\Nebula\Controller\V1\ControllerRelay\DestinationOutput::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Strike configuration for this controller relay.
     *
     * Generated from protobuf field <code>.salto.nebula.controller.v1.ControllerRelay.Strike strike = 5;</code>
     * @return \Saltoapis\Nebula\Controller\V1\ControllerRelay\Strike|null
     */
    public function getStrike()
    {
        return $this->readOneof(5);
    }

    public function hasStrike()
    {
        return $this->hasOneof(5);
    }

    /**
     * Strike configuration for this controller relay.
     *
     * Generated from protobuf field <code>.salto.nebula.controller.v1.ControllerRelay.Strike strike = 5;</code>
     * @param \Saltoapis\Nebula\Controller\V1\ControllerRelay\Strike $var
     * @return $this
     */
    public function setStrike($var)
    {
        GPBUtil::checkMessage($var, \Saltoapis\Nebula\Controller\V1\ControllerRelay\Strike::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getType()
    {
        return $this->whichOneof("type");
    }

}

