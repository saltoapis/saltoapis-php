<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: salto/nebula/device/v1/device.proto

namespace Saltoapis\Nebula\Device\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The device object
 *
 * Generated from protobuf message <code>salto.nebula.device.v1.Device</code>
 */
class Device extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. Resource name of the device. It must have the format of
     * `installations/{@*}devices/*`. For example:
     * `installations/surelock-homes-hq/devices/dancing-men`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Display name of the device.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     */
    protected $display_name = '';
    /**
     * Globally unique identifier that is used across all devices manufactured
     * by SALTO, including gateways, extenders, electronic locks and so on.
     *
     * Generated from protobuf field <code>optional string device_id = 3;</code>
     */
    protected $device_id = null;
    /**
     * Device type.
     *
     * Generated from protobuf field <code>.salto.nebula.type.DeviceType device_type = 4;</code>
     */
    protected $device_type = 0;
    /**
     * Resource name of the specific source device (gateway, extender, electronic_lock, encoder). For example:
     * `installations/surelock-homes-hq/electronic-locks/dancing-men` or
     * `installations/surelock-homes-hq/gateways/conan-doyle` or
     * `installations/surelock-homes-hq/extenders/elementary` or
     * `installations/surelock-homes-hq/encoders/dancing-men`.
     *
     * Generated from protobuf field <code>string source = 5;</code>
     */
    protected $source = '';
    /**
     * Indicates whether this device has pending updates or not. This
     * could be because there was a pending configuration or a firmware update
     * and is conditionally set based on the current installation settings.
     *
     * Generated from protobuf field <code>bool outdated = 8;</code>
     */
    protected $outdated = false;
    /**
     * Indicates whether this device is connected or not. The connectivity
     * detection policy could vary depending on the device. The property is
     * left unset if it is an offline device.
     *
     * Generated from protobuf field <code>optional bool connected = 9;</code>
     */
    protected $connected = null;
    /**
     * Indicates whether the battery of this device is low, and needs
     * replacing, or is normal and doesn't need replacing. If unset it means
     * the device is mains powered. For example, the device could be a
     * gateway, an extender, or a control unit.
     *
     * Generated from protobuf field <code>optional bool low_battery = 10;</code>
     */
    protected $low_battery = null;
    /**
     * The last time an event was received.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp last_event_time = 11;</code>
     */
    protected $last_event_time = null;
    protected $parent_device;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Output only. Resource name of the device. It must have the format of
     *           `installations/{@*}devices/*`. For example:
     *           `installations/surelock-homes-hq/devices/dancing-men`.
     *     @type string $display_name
     *           Display name of the device.
     *     @type string $device_id
     *           Globally unique identifier that is used across all devices manufactured
     *           by SALTO, including gateways, extenders, electronic locks and so on.
     *     @type int $device_type
     *           Device type.
     *     @type string $source
     *           Resource name of the specific source device (gateway, extender, electronic_lock, encoder). For example:
     *           `installations/surelock-homes-hq/electronic-locks/dancing-men` or
     *           `installations/surelock-homes-hq/gateways/conan-doyle` or
     *           `installations/surelock-homes-hq/extenders/elementary` or
     *           `installations/surelock-homes-hq/encoders/dancing-men`.
     *     @type string $gateway
     *           Parent name, when the device has a gateway relative
     *     @type string $extender
     *           Parent name, when the device has a extender relative
     *     @type bool $outdated
     *           Indicates whether this device has pending updates or not. This
     *           could be because there was a pending configuration or a firmware update
     *           and is conditionally set based on the current installation settings.
     *     @type bool $connected
     *           Indicates whether this device is connected or not. The connectivity
     *           detection policy could vary depending on the device. The property is
     *           left unset if it is an offline device.
     *     @type bool $low_battery
     *           Indicates whether the battery of this device is low, and needs
     *           replacing, or is normal and doesn't need replacing. If unset it means
     *           the device is mains powered. For example, the device could be a
     *           gateway, an extender, or a control unit.
     *     @type \Google\Protobuf\Timestamp $last_event_time
     *           The last time an event was received.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Saltoapis\Nebula\Device\V1\Device::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. Resource name of the device. It must have the format of
     * `installations/{@*}devices/*`. For example:
     * `installations/surelock-homes-hq/devices/dancing-men`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Output only. Resource name of the device. It must have the format of
     * `installations/{@*}devices/*`. For example:
     * `installations/surelock-homes-hq/devices/dancing-men`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Display name of the device.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Display name of the device.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * Globally unique identifier that is used across all devices manufactured
     * by SALTO, including gateways, extenders, electronic locks and so on.
     *
     * Generated from protobuf field <code>optional string device_id = 3;</code>
     * @return string
     */
    public function getDeviceId()
    {
        return isset($this->device_id) ? $this->device_id : '';
    }

    public function hasDeviceId()
    {
        return isset($this->device_id);
    }

    public function clearDeviceId()
    {
        unset($this->device_id);
    }

    /**
     * Globally unique identifier that is used across all devices manufactured
     * by SALTO, including gateways, extenders, electronic locks and so on.
     *
     * Generated from protobuf field <code>optional string device_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDeviceId($var)
    {
        GPBUtil::checkString($var, True);
        $this->device_id = $var;

        return $this;
    }

    /**
     * Device type.
     *
     * Generated from protobuf field <code>.salto.nebula.type.DeviceType device_type = 4;</code>
     * @return int
     */
    public function getDeviceType()
    {
        return $this->device_type;
    }

    /**
     * Device type.
     *
     * Generated from protobuf field <code>.salto.nebula.type.DeviceType device_type = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setDeviceType($var)
    {
        GPBUtil::checkEnum($var, \Saltoapis\Nebula\Type\DeviceType::class);
        $this->device_type = $var;

        return $this;
    }

    /**
     * Resource name of the specific source device (gateway, extender, electronic_lock, encoder). For example:
     * `installations/surelock-homes-hq/electronic-locks/dancing-men` or
     * `installations/surelock-homes-hq/gateways/conan-doyle` or
     * `installations/surelock-homes-hq/extenders/elementary` or
     * `installations/surelock-homes-hq/encoders/dancing-men`.
     *
     * Generated from protobuf field <code>string source = 5;</code>
     * @return string
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * Resource name of the specific source device (gateway, extender, electronic_lock, encoder). For example:
     * `installations/surelock-homes-hq/electronic-locks/dancing-men` or
     * `installations/surelock-homes-hq/gateways/conan-doyle` or
     * `installations/surelock-homes-hq/extenders/elementary` or
     * `installations/surelock-homes-hq/encoders/dancing-men`.
     *
     * Generated from protobuf field <code>string source = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkString($var, True);
        $this->source = $var;

        return $this;
    }

    /**
     * Parent name, when the device has a gateway relative
     *
     * Generated from protobuf field <code>string gateway = 6;</code>
     * @return string
     */
    public function getGateway()
    {
        return $this->readOneof(6);
    }

    public function hasGateway()
    {
        return $this->hasOneof(6);
    }

    /**
     * Parent name, when the device has a gateway relative
     *
     * Generated from protobuf field <code>string gateway = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setGateway($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Parent name, when the device has a extender relative
     *
     * Generated from protobuf field <code>string extender = 7;</code>
     * @return string
     */
    public function getExtender()
    {
        return $this->readOneof(7);
    }

    public function hasExtender()
    {
        return $this->hasOneof(7);
    }

    /**
     * Parent name, when the device has a extender relative
     *
     * Generated from protobuf field <code>string extender = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setExtender($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Indicates whether this device has pending updates or not. This
     * could be because there was a pending configuration or a firmware update
     * and is conditionally set based on the current installation settings.
     *
     * Generated from protobuf field <code>bool outdated = 8;</code>
     * @return bool
     */
    public function getOutdated()
    {
        return $this->outdated;
    }

    /**
     * Indicates whether this device has pending updates or not. This
     * could be because there was a pending configuration or a firmware update
     * and is conditionally set based on the current installation settings.
     *
     * Generated from protobuf field <code>bool outdated = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setOutdated($var)
    {
        GPBUtil::checkBool($var);
        $this->outdated = $var;

        return $this;
    }

    /**
     * Indicates whether this device is connected or not. The connectivity
     * detection policy could vary depending on the device. The property is
     * left unset if it is an offline device.
     *
     * Generated from protobuf field <code>optional bool connected = 9;</code>
     * @return bool
     */
    public function getConnected()
    {
        return isset($this->connected) ? $this->connected : false;
    }

    public function hasConnected()
    {
        return isset($this->connected);
    }

    public function clearConnected()
    {
        unset($this->connected);
    }

    /**
     * Indicates whether this device is connected or not. The connectivity
     * detection policy could vary depending on the device. The property is
     * left unset if it is an offline device.
     *
     * Generated from protobuf field <code>optional bool connected = 9;</code>
     * @param bool $var
     * @return $this
     */
    public function setConnected($var)
    {
        GPBUtil::checkBool($var);
        $this->connected = $var;

        return $this;
    }

    /**
     * Indicates whether the battery of this device is low, and needs
     * replacing, or is normal and doesn't need replacing. If unset it means
     * the device is mains powered. For example, the device could be a
     * gateway, an extender, or a control unit.
     *
     * Generated from protobuf field <code>optional bool low_battery = 10;</code>
     * @return bool
     */
    public function getLowBattery()
    {
        return isset($this->low_battery) ? $this->low_battery : false;
    }

    public function hasLowBattery()
    {
        return isset($this->low_battery);
    }

    public function clearLowBattery()
    {
        unset($this->low_battery);
    }

    /**
     * Indicates whether the battery of this device is low, and needs
     * replacing, or is normal and doesn't need replacing. If unset it means
     * the device is mains powered. For example, the device could be a
     * gateway, an extender, or a control unit.
     *
     * Generated from protobuf field <code>optional bool low_battery = 10;</code>
     * @param bool $var
     * @return $this
     */
    public function setLowBattery($var)
    {
        GPBUtil::checkBool($var);
        $this->low_battery = $var;

        return $this;
    }

    /**
     * The last time an event was received.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp last_event_time = 11;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getLastEventTime()
    {
        return $this->last_event_time;
    }

    public function hasLastEventTime()
    {
        return isset($this->last_event_time);
    }

    public function clearLastEventTime()
    {
        unset($this->last_event_time);
    }

    /**
     * The last time an event was received.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp last_event_time = 11;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setLastEventTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->last_event_time = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getParentDevice()
    {
        return $this->whichOneof("parent_device");
    }

}

