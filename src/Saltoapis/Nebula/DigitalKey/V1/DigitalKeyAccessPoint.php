<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: salto/nebula/digitalkey/v1/digital_key.proto

namespace Saltoapis\Nebula\DigitalKey\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The digital key's access point association
 *
 * Generated from protobuf message <code>salto.nebula.digitalkey.v1.DigitalKeyAccessPoint</code>
 */
class DigitalKeyAccessPoint extends \Google\Protobuf\Internal\Message
{
    /**
     *  Resource name of the access point. It must have the format
     * `digital-keys/{digital-key}/access-points/*`. For example:
     * `digital-keys/baker-street-key/access-points/baker-street-entrance`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Display name of the access point.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     */
    protected $display_name = '';
    /**
     * The device which gives coverage to the access point.
     *
     * Generated from protobuf field <code>string device_id = 3;</code>
     */
    protected $device_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *            Resource name of the access point. It must have the format
     *           `digital-keys/{digital-key}/access-points/*`. For example:
     *           `digital-keys/baker-street-key/access-points/baker-street-entrance`.
     *     @type string $display_name
     *           Display name of the access point.
     *     @type string $device_id
     *           The device which gives coverage to the access point.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Saltoapis\Nebula\DigitalKey\V1\DigitalKey::initOnce();
        parent::__construct($data);
    }

    /**
     *  Resource name of the access point. It must have the format
     * `digital-keys/{digital-key}/access-points/*`. For example:
     * `digital-keys/baker-street-key/access-points/baker-street-entrance`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     *  Resource name of the access point. It must have the format
     * `digital-keys/{digital-key}/access-points/*`. For example:
     * `digital-keys/baker-street-key/access-points/baker-street-entrance`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Display name of the access point.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Display name of the access point.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * The device which gives coverage to the access point.
     *
     * Generated from protobuf field <code>string device_id = 3;</code>
     * @return string
     */
    public function getDeviceId()
    {
        return $this->device_id;
    }

    /**
     * The device which gives coverage to the access point.
     *
     * Generated from protobuf field <code>string device_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDeviceId($var)
    {
        GPBUtil::checkString($var, True);
        $this->device_id = $var;

        return $this;
    }

}

