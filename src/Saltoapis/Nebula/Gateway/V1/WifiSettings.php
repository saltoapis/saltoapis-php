<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: salto/nebula/gateway/v1/gateway.proto

namespace Saltoapis\Nebula\Gateway\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * WiFi network settings
 *
 * Generated from protobuf message <code>salto.nebula.gateway.v1.WifiSettings</code>
 */
class WifiSettings extends \Google\Protobuf\Internal\Message
{
    /**
     * IPv4 (Internet Protocol version 4) settings of a WiFi network.
     *
     * Generated from protobuf field <code>.salto.nebula.gateway.v1.IPv4Settings ipv4_settings = 1;</code>
     */
    protected $ipv4_settings = null;
    /**
     * DNS settings of a WiFi network.
     *
     * Generated from protobuf field <code>.salto.nebula.gateway.v1.DNSSettings dns_settings = 2;</code>
     */
    protected $dns_settings = null;
    /**
     * Service set identifier of a WiFi network. An SSID is a 32-character
     * unique identifier attached to the header of packets that are sent over a
     * Wireless Local Area Network. SSIDs serve as "network names" and are
     * typically human readable.
     *
     * Generated from protobuf field <code>string ssid = 3;</code>
     */
    protected $ssid = '';
    /**
     * Password to be used to authenticate on a WiFi network.
     *
     * Generated from protobuf field <code>optional string password = 4;</code>
     */
    protected $password = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Saltoapis\Nebula\Gateway\V1\IPv4Settings $ipv4_settings
     *           IPv4 (Internet Protocol version 4) settings of a WiFi network.
     *     @type \Saltoapis\Nebula\Gateway\V1\DNSSettings $dns_settings
     *           DNS settings of a WiFi network.
     *     @type string $ssid
     *           Service set identifier of a WiFi network. An SSID is a 32-character
     *           unique identifier attached to the header of packets that are sent over a
     *           Wireless Local Area Network. SSIDs serve as "network names" and are
     *           typically human readable.
     *     @type string $password
     *           Password to be used to authenticate on a WiFi network.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Saltoapis\Nebula\Gateway\V1\Gateway::initOnce();
        parent::__construct($data);
    }

    /**
     * IPv4 (Internet Protocol version 4) settings of a WiFi network.
     *
     * Generated from protobuf field <code>.salto.nebula.gateway.v1.IPv4Settings ipv4_settings = 1;</code>
     * @return \Saltoapis\Nebula\Gateway\V1\IPv4Settings|null
     */
    public function getIpv4Settings()
    {
        return $this->ipv4_settings;
    }

    public function hasIpv4Settings()
    {
        return isset($this->ipv4_settings);
    }

    public function clearIpv4Settings()
    {
        unset($this->ipv4_settings);
    }

    /**
     * IPv4 (Internet Protocol version 4) settings of a WiFi network.
     *
     * Generated from protobuf field <code>.salto.nebula.gateway.v1.IPv4Settings ipv4_settings = 1;</code>
     * @param \Saltoapis\Nebula\Gateway\V1\IPv4Settings $var
     * @return $this
     */
    public function setIpv4Settings($var)
    {
        GPBUtil::checkMessage($var, \Saltoapis\Nebula\Gateway\V1\IPv4Settings::class);
        $this->ipv4_settings = $var;

        return $this;
    }

    /**
     * DNS settings of a WiFi network.
     *
     * Generated from protobuf field <code>.salto.nebula.gateway.v1.DNSSettings dns_settings = 2;</code>
     * @return \Saltoapis\Nebula\Gateway\V1\DNSSettings|null
     */
    public function getDnsSettings()
    {
        return $this->dns_settings;
    }

    public function hasDnsSettings()
    {
        return isset($this->dns_settings);
    }

    public function clearDnsSettings()
    {
        unset($this->dns_settings);
    }

    /**
     * DNS settings of a WiFi network.
     *
     * Generated from protobuf field <code>.salto.nebula.gateway.v1.DNSSettings dns_settings = 2;</code>
     * @param \Saltoapis\Nebula\Gateway\V1\DNSSettings $var
     * @return $this
     */
    public function setDnsSettings($var)
    {
        GPBUtil::checkMessage($var, \Saltoapis\Nebula\Gateway\V1\DNSSettings::class);
        $this->dns_settings = $var;

        return $this;
    }

    /**
     * Service set identifier of a WiFi network. An SSID is a 32-character
     * unique identifier attached to the header of packets that are sent over a
     * Wireless Local Area Network. SSIDs serve as "network names" and are
     * typically human readable.
     *
     * Generated from protobuf field <code>string ssid = 3;</code>
     * @return string
     */
    public function getSsid()
    {
        return $this->ssid;
    }

    /**
     * Service set identifier of a WiFi network. An SSID is a 32-character
     * unique identifier attached to the header of packets that are sent over a
     * Wireless Local Area Network. SSIDs serve as "network names" and are
     * typically human readable.
     *
     * Generated from protobuf field <code>string ssid = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setSsid($var)
    {
        GPBUtil::checkString($var, True);
        $this->ssid = $var;

        return $this;
    }

    /**
     * Password to be used to authenticate on a WiFi network.
     *
     * Generated from protobuf field <code>optional string password = 4;</code>
     * @return string
     */
    public function getPassword()
    {
        return isset($this->password) ? $this->password : '';
    }

    public function hasPassword()
    {
        return isset($this->password);
    }

    public function clearPassword()
    {
        unset($this->password);
    }

    /**
     * Password to be used to authenticate on a WiFi network.
     *
     * Generated from protobuf field <code>optional string password = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPassword($var)
    {
        GPBUtil::checkString($var, True);
        $this->password = $var;

        return $this;
    }

}

