<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: salto/nebula/installation/v1/installation.proto

namespace Saltoapis\Nebula\Installation\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The installation object
 *
 * Generated from protobuf message <code>salto.nebula.installation.v1.Installation</code>
 */
class Installation extends \Google\Protobuf\Internal\Message
{
    /**
     * Resource name of the installation. It must have the format
     * of `installations/&#42;`. For example: `installations/surelock-homes-hq`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Display name of the installation.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     */
    protected $display_name = '';
    /**
     * The file resource name for the installation photo. It must have the
     * format of
     * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     *
     * Generated from protobuf field <code>optional string photo = 3;</code>
     */
    protected $photo = null;
    /**
     * The URI to view the installation photo.
     *
     * Generated from protobuf field <code>string photo_uri = 4;</code>
     */
    protected $photo_uri = '';
    /**
     * Unstructured address.
     * For example: "1600 Amphitheatre Pkwy, Mountain View, CA 94043,
     * Sunnyvale, California."
     *
     * Generated from protobuf field <code>string address = 5;</code>
     */
    protected $address = '';
    /**
     * Time zone where the installation is located. It must follow the IANA Time
     * Zone Database format. For example, "America/New_York."
     *
     * Generated from protobuf field <code>string time_zone = 6;</code>
     */
    protected $time_zone = '';
    /**
     * The digital key art configuration resource that belongs to the installation.
     *
     * Generated from protobuf field <code>.salto.nebula.installation.v1.Installation.DigitalKeyArt digital_key_art = 7;</code>
     */
    protected $digital_key_art = null;
    /**
     * Current state of the ownership transfer. Client must not set the
     * `Installation.transfer_ownership_state` field. This data is only
     * visible to the current installation owner.
     *
     * Generated from protobuf field <code>.salto.nebula.installation.v1.Installation.TransferOwnershipState transfer_ownership_state = 8;</code>
     */
    protected $transfer_ownership_state = null;
    /**
     * The time when the installation was soft deleted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp delete_time = 12;</code>
     */
    protected $delete_time = null;
    /**
     * The information of the partner who created the installation.
     *
     * Generated from protobuf field <code>optional .salto.nebula.installation.v1.Installation.PartnerInfo partner_info = 9;</code>
     */
    protected $partner_info = null;
    /**
     * The time when the installation was blocked.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp block_time = 11;</code>
     */
    protected $block_time = null;
    /**
     * The length of time a key remains valid before requiring renewal. This
     * duration defines the effective lifespan of a key, after which it must be
     * updated to maintain access privileges. The duration is crucial for
     * ensuring security in the system, as it determines how frequently keys
     * need to be renewed.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration key_renewal_duration = 10;</code>
     */
    protected $key_renewal_duration = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Resource name of the installation. It must have the format
     *           of `installations/&#42;`. For example: `installations/surelock-homes-hq`.
     *     @type string $display_name
     *           Display name of the installation.
     *     @type string $photo
     *           The file resource name for the installation photo. It must have the
     *           format of
     *           `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     *     @type string $photo_uri
     *           The URI to view the installation photo.
     *     @type string $address
     *           Unstructured address.
     *           For example: "1600 Amphitheatre Pkwy, Mountain View, CA 94043,
     *           Sunnyvale, California."
     *     @type string $time_zone
     *           Time zone where the installation is located. It must follow the IANA Time
     *           Zone Database format. For example, "America/New_York."
     *     @type \Saltoapis\Nebula\Installation\V1\Installation\DigitalKeyArt $digital_key_art
     *           The digital key art configuration resource that belongs to the installation.
     *     @type \Saltoapis\Nebula\Installation\V1\Installation\TransferOwnershipState $transfer_ownership_state
     *           Current state of the ownership transfer. Client must not set the
     *           `Installation.transfer_ownership_state` field. This data is only
     *           visible to the current installation owner.
     *     @type \Google\Protobuf\Timestamp $delete_time
     *           The time when the installation was soft deleted.
     *     @type \Saltoapis\Nebula\Installation\V1\Installation\PartnerInfo $partner_info
     *           The information of the partner who created the installation.
     *     @type \Google\Protobuf\Timestamp $block_time
     *           The time when the installation was blocked.
     *     @type \Google\Protobuf\Duration $key_renewal_duration
     *           The length of time a key remains valid before requiring renewal. This
     *           duration defines the effective lifespan of a key, after which it must be
     *           updated to maintain access privileges. The duration is crucial for
     *           ensuring security in the system, as it determines how frequently keys
     *           need to be renewed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Saltoapis\Nebula\Installation\V1\Installation::initOnce();
        parent::__construct($data);
    }

    /**
     * Resource name of the installation. It must have the format
     * of `installations/&#42;`. For example: `installations/surelock-homes-hq`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Resource name of the installation. It must have the format
     * of `installations/&#42;`. For example: `installations/surelock-homes-hq`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Display name of the installation.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Display name of the installation.
     *
     * Generated from protobuf field <code>string display_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * The file resource name for the installation photo. It must have the
     * format of
     * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     *
     * Generated from protobuf field <code>optional string photo = 3;</code>
     * @return string
     */
    public function getPhoto()
    {
        return isset($this->photo) ? $this->photo : '';
    }

    public function hasPhoto()
    {
        return isset($this->photo);
    }

    public function clearPhoto()
    {
        unset($this->photo);
    }

    /**
     * The file resource name for the installation photo. It must have the
     * format of
     * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     *
     * Generated from protobuf field <code>optional string photo = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setPhoto($var)
    {
        GPBUtil::checkString($var, True);
        $this->photo = $var;

        return $this;
    }

    /**
     * The URI to view the installation photo.
     *
     * Generated from protobuf field <code>string photo_uri = 4;</code>
     * @return string
     */
    public function getPhotoUri()
    {
        return $this->photo_uri;
    }

    /**
     * The URI to view the installation photo.
     *
     * Generated from protobuf field <code>string photo_uri = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPhotoUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->photo_uri = $var;

        return $this;
    }

    /**
     * Unstructured address.
     * For example: "1600 Amphitheatre Pkwy, Mountain View, CA 94043,
     * Sunnyvale, California."
     *
     * Generated from protobuf field <code>string address = 5;</code>
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * Unstructured address.
     * For example: "1600 Amphitheatre Pkwy, Mountain View, CA 94043,
     * Sunnyvale, California."
     *
     * Generated from protobuf field <code>string address = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->address = $var;

        return $this;
    }

    /**
     * Time zone where the installation is located. It must follow the IANA Time
     * Zone Database format. For example, "America/New_York."
     *
     * Generated from protobuf field <code>string time_zone = 6;</code>
     * @return string
     */
    public function getTimeZone()
    {
        return $this->time_zone;
    }

    /**
     * Time zone where the installation is located. It must follow the IANA Time
     * Zone Database format. For example, "America/New_York."
     *
     * Generated from protobuf field <code>string time_zone = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setTimeZone($var)
    {
        GPBUtil::checkString($var, True);
        $this->time_zone = $var;

        return $this;
    }

    /**
     * The digital key art configuration resource that belongs to the installation.
     *
     * Generated from protobuf field <code>.salto.nebula.installation.v1.Installation.DigitalKeyArt digital_key_art = 7;</code>
     * @return \Saltoapis\Nebula\Installation\V1\Installation\DigitalKeyArt|null
     */
    public function getDigitalKeyArt()
    {
        return $this->digital_key_art;
    }

    public function hasDigitalKeyArt()
    {
        return isset($this->digital_key_art);
    }

    public function clearDigitalKeyArt()
    {
        unset($this->digital_key_art);
    }

    /**
     * The digital key art configuration resource that belongs to the installation.
     *
     * Generated from protobuf field <code>.salto.nebula.installation.v1.Installation.DigitalKeyArt digital_key_art = 7;</code>
     * @param \Saltoapis\Nebula\Installation\V1\Installation\DigitalKeyArt $var
     * @return $this
     */
    public function setDigitalKeyArt($var)
    {
        GPBUtil::checkMessage($var, \Saltoapis\Nebula\Installation\V1\Installation\DigitalKeyArt::class);
        $this->digital_key_art = $var;

        return $this;
    }

    /**
     * Current state of the ownership transfer. Client must not set the
     * `Installation.transfer_ownership_state` field. This data is only
     * visible to the current installation owner.
     *
     * Generated from protobuf field <code>.salto.nebula.installation.v1.Installation.TransferOwnershipState transfer_ownership_state = 8;</code>
     * @return \Saltoapis\Nebula\Installation\V1\Installation\TransferOwnershipState|null
     */
    public function getTransferOwnershipState()
    {
        return $this->transfer_ownership_state;
    }

    public function hasTransferOwnershipState()
    {
        return isset($this->transfer_ownership_state);
    }

    public function clearTransferOwnershipState()
    {
        unset($this->transfer_ownership_state);
    }

    /**
     * Current state of the ownership transfer. Client must not set the
     * `Installation.transfer_ownership_state` field. This data is only
     * visible to the current installation owner.
     *
     * Generated from protobuf field <code>.salto.nebula.installation.v1.Installation.TransferOwnershipState transfer_ownership_state = 8;</code>
     * @param \Saltoapis\Nebula\Installation\V1\Installation\TransferOwnershipState $var
     * @return $this
     */
    public function setTransferOwnershipState($var)
    {
        GPBUtil::checkMessage($var, \Saltoapis\Nebula\Installation\V1\Installation\TransferOwnershipState::class);
        $this->transfer_ownership_state = $var;

        return $this;
    }

    /**
     * The time when the installation was soft deleted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp delete_time = 12;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getDeleteTime()
    {
        return $this->delete_time;
    }

    public function hasDeleteTime()
    {
        return isset($this->delete_time);
    }

    public function clearDeleteTime()
    {
        unset($this->delete_time);
    }

    /**
     * The time when the installation was soft deleted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp delete_time = 12;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setDeleteTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->delete_time = $var;

        return $this;
    }

    /**
     * The information of the partner who created the installation.
     *
     * Generated from protobuf field <code>optional .salto.nebula.installation.v1.Installation.PartnerInfo partner_info = 9;</code>
     * @return \Saltoapis\Nebula\Installation\V1\Installation\PartnerInfo|null
     */
    public function getPartnerInfo()
    {
        return $this->partner_info;
    }

    public function hasPartnerInfo()
    {
        return isset($this->partner_info);
    }

    public function clearPartnerInfo()
    {
        unset($this->partner_info);
    }

    /**
     * The information of the partner who created the installation.
     *
     * Generated from protobuf field <code>optional .salto.nebula.installation.v1.Installation.PartnerInfo partner_info = 9;</code>
     * @param \Saltoapis\Nebula\Installation\V1\Installation\PartnerInfo $var
     * @return $this
     */
    public function setPartnerInfo($var)
    {
        GPBUtil::checkMessage($var, \Saltoapis\Nebula\Installation\V1\Installation\PartnerInfo::class);
        $this->partner_info = $var;

        return $this;
    }

    /**
     * The time when the installation was blocked.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp block_time = 11;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getBlockTime()
    {
        return $this->block_time;
    }

    public function hasBlockTime()
    {
        return isset($this->block_time);
    }

    public function clearBlockTime()
    {
        unset($this->block_time);
    }

    /**
     * The time when the installation was blocked.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp block_time = 11;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setBlockTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->block_time = $var;

        return $this;
    }

    /**
     * The length of time a key remains valid before requiring renewal. This
     * duration defines the effective lifespan of a key, after which it must be
     * updated to maintain access privileges. The duration is crucial for
     * ensuring security in the system, as it determines how frequently keys
     * need to be renewed.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration key_renewal_duration = 10;</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getKeyRenewalDuration()
    {
        return $this->key_renewal_duration;
    }

    public function hasKeyRenewalDuration()
    {
        return isset($this->key_renewal_duration);
    }

    public function clearKeyRenewalDuration()
    {
        unset($this->key_renewal_duration);
    }

    /**
     * The length of time a key remains valid before requiring renewal. This
     * duration defines the effective lifespan of a key, after which it must be
     * updated to maintain access privileges. The duration is crucial for
     * ensuring security in the system, as it determines how frequently keys
     * need to be renewed.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration key_renewal_duration = 10;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setKeyRenewalDuration($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->key_renewal_duration = $var;

        return $this;
    }

}

