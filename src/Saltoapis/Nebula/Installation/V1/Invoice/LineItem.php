<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: salto/nebula/installation/v1/installation.proto

namespace Saltoapis\Nebula\Installation\V1\Invoice;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The line item object.
 *
 * Generated from protobuf message <code>salto.nebula.installation.v1.Invoice.LineItem</code>
 */
class LineItem extends \Google\Protobuf\Internal\Message
{
    /**
     * The line item ID belonging to the subscription. For example:
     * `elevators`.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * The quantity of the line item used.
     *
     * Generated from protobuf field <code>int32 quantity = 2;</code>
     */
    protected $quantity = 0;
    /**
     * The cost of the item price when the pricing model is flat fee.
     * When the pricing model is per unit, it is the price per unit quantity of the item.
     * The value is in the minor unit of the currency. (for example: cents).
     *
     * Generated from protobuf field <code>int64 price = 3;</code>
     */
    protected $price = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           The line item ID belonging to the subscription. For example:
     *           `elevators`.
     *     @type int $quantity
     *           The quantity of the line item used.
     *     @type int|string $price
     *           The cost of the item price when the pricing model is flat fee.
     *           When the pricing model is per unit, it is the price per unit quantity of the item.
     *           The value is in the minor unit of the currency. (for example: cents).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Saltoapis\Nebula\Installation\V1\Installation::initOnce();
        parent::__construct($data);
    }

    /**
     * The line item ID belonging to the subscription. For example:
     * `elevators`.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * The line item ID belonging to the subscription. For example:
     * `elevators`.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * The quantity of the line item used.
     *
     * Generated from protobuf field <code>int32 quantity = 2;</code>
     * @return int
     */
    public function getQuantity()
    {
        return $this->quantity;
    }

    /**
     * The quantity of the line item used.
     *
     * Generated from protobuf field <code>int32 quantity = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setQuantity($var)
    {
        GPBUtil::checkInt32($var);
        $this->quantity = $var;

        return $this;
    }

    /**
     * The cost of the item price when the pricing model is flat fee.
     * When the pricing model is per unit, it is the price per unit quantity of the item.
     * The value is in the minor unit of the currency. (for example: cents).
     *
     * Generated from protobuf field <code>int64 price = 3;</code>
     * @return int|string
     */
    public function getPrice()
    {
        return $this->price;
    }

    /**
     * The cost of the item price when the pricing model is flat fee.
     * When the pricing model is per unit, it is the price per unit quantity of the item.
     * The value is in the minor unit of the currency. (for example: cents).
     *
     * Generated from protobuf field <code>int64 price = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPrice($var)
    {
        GPBUtil::checkInt64($var);
        $this->price = $var;

        return $this;
    }

}

