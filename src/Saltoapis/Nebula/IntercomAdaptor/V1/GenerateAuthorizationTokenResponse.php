<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: salto/nebula/intercomadaptor/v1/intercom_adaptor.proto

namespace Saltoapis\Nebula\IntercomAdaptor\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The response message for [`GenerateAuthorizationToken`][salto.nebula.intercomadaptor.v1.IntercomAdaptorService.GenerateAuthorizationToken]
 *
 * Generated from protobuf message <code>salto.nebula.intercomadaptor.v1.GenerateAuthorizationTokenResponse</code>
 */
class GenerateAuthorizationTokenResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Authorization token to be used for connecting against an intercom
     * adaptor.
     *
     * Generated from protobuf field <code>bytes authorization_token = 1;</code>
     */
    protected $authorization_token = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $authorization_token
     *           Authorization token to be used for connecting against an intercom
     *           adaptor.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Saltoapis\Nebula\IntercomAdaptor\V1\IntercomAdaptor::initOnce();
        parent::__construct($data);
    }

    /**
     * Authorization token to be used for connecting against an intercom
     * adaptor.
     *
     * Generated from protobuf field <code>bytes authorization_token = 1;</code>
     * @return string
     */
    public function getAuthorizationToken()
    {
        return $this->authorization_token;
    }

    /**
     * Authorization token to be used for connecting against an intercom
     * adaptor.
     *
     * Generated from protobuf field <code>bytes authorization_token = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAuthorizationToken($var)
    {
        GPBUtil::checkString($var, False);
        $this->authorization_token = $var;

        return $this;
    }

}

