<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: salto/nebula/type/day_type.proto

namespace Saltoapis\Nebula\Type;

use UnexpectedValueException;

/**
 * Represents the day types.
 *
 * Protobuf type <code>salto.nebula.type.DayType</code>
 */
class DayType
{
    /**
     * Unspecified
     *
     * Generated from protobuf enum <code>DAY_TYPE_UNSPECIFIED = 0;</code>
     */
    const DAY_TYPE_UNSPECIFIED = 0;
    /**
     * Normal day
     *
     * Generated from protobuf enum <code>NORMAL = 1;</code>
     */
    const NORMAL = 1;
    /**
     * Holidays
     *
     * Generated from protobuf enum <code>HOLIDAY = 2;</code>
     */
    const HOLIDAY = 2;
    /**
     * Special day type 1
     *
     * Generated from protobuf enum <code>SPECIAL_1 = 3;</code>
     */
    const SPECIAL_1 = 3;
    /**
     * Special day type 2
     *
     * Generated from protobuf enum <code>SPECIAL_2 = 4;</code>
     */
    const SPECIAL_2 = 4;

    private static $valueToName = [
        self::DAY_TYPE_UNSPECIFIED => 'DAY_TYPE_UNSPECIFIED',
        self::NORMAL => 'NORMAL',
        self::HOLIDAY => 'HOLIDAY',
        self::SPECIAL_1 => 'SPECIAL_1',
        self::SPECIAL_2 => 'SPECIAL_2',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

