<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: salto/nebula/type/opening_mode.proto

namespace Saltoapis\Nebula\Type;

use UnexpectedValueException;

/**
 * Represents an opening mode.
 *
 * Protobuf type <code>salto.nebula.type.OpeningMode</code>
 */
class OpeningMode
{
    /**
     * Unspecified
     *
     * Generated from protobuf enum <code>OPENING_MODE_UNSPECIFIED = 0;</code>
     */
    const OPENING_MODE_UNSPECIFIED = 0;
    /**
     * Office.
     *
     * Generated from protobuf enum <code>OFFICE = 1;</code>
     */
    const OFFICE = 1;
    /**
     * Toggle.
     *
     * Generated from protobuf enum <code>TOGGLE = 2;</code>
     */
    const TOGGLE = 2;
    /**
     * Automatic opening for ICAD.
     *
     * Generated from protobuf enum <code>RING_AND_OPEN = 13;</code>
     */
    const RING_AND_OPEN = 13;

    private static $valueToName = [
        self::OPENING_MODE_UNSPECIFIED => 'OPENING_MODE_UNSPECIFIED',
        self::OFFICE => 'OFFICE',
        self::TOGGLE => 'TOGGLE',
        self::RING_AND_OPEN => 'RING_AND_OPEN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

