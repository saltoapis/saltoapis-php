<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: salto/nebula/unit/v1/unit.proto

namespace Saltoapis\Nebula\Unit\V1\MoveInUnitRequest;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Representation of a unit occupant resource inside the API.
 * They can have roles to manage the unit.
 *
 * Generated from protobuf message <code>salto.nebula.unit.v1.MoveInUnitRequest.Occupant</code>
 */
class Occupant extends \Google\Protobuf\Internal\Message
{
    /**
     * The personal name, forename or given name ("first name"). It could
     * also contain a middle name. First name is not used because the given
     * name is not placed first in some cultures.
     *
     * Generated from protobuf field <code>string given_name = 1;</code>
     */
    protected $given_name = '';
    /**
     * The surname or family name ("last name"). It could also contain more than
     * one surname so that both matrilineal and patrilineal surnames can be
     * included in one place. Last name is not used because the family name is
     * not placed last in some cultures.
     *
     * Generated from protobuf field <code>optional string family_name = 2;</code>
     */
    protected $family_name = null;
    /**
     * The email address of the occupant. It must be unique within the
     * unit.
     *
     * Generated from protobuf field <code>optional string email = 3;</code>
     */
    protected $email = null;
    /**
     * The access rights resource names to bind as an association to the
     * occupant. For example:
     * `installations/surelock-homes-hq/units/101/access-rights/baskerville`.
     *
     * Generated from protobuf field <code>repeated string access_rights = 4;</code>
     */
    private $access_rights;
    /**
     * The IAM roles to bind as an association to the occupant. For example:
     * `iam-roles/unit.admin`.
     *
     * Generated from protobuf field <code>repeated string iam_roles = 5;</code>
     */
    private $iam_roles;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $given_name
     *           The personal name, forename or given name ("first name"). It could
     *           also contain a middle name. First name is not used because the given
     *           name is not placed first in some cultures.
     *     @type string $family_name
     *           The surname or family name ("last name"). It could also contain more than
     *           one surname so that both matrilineal and patrilineal surnames can be
     *           included in one place. Last name is not used because the family name is
     *           not placed last in some cultures.
     *     @type string $email
     *           The email address of the occupant. It must be unique within the
     *           unit.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $access_rights
     *           The access rights resource names to bind as an association to the
     *           occupant. For example:
     *           `installations/surelock-homes-hq/units/101/access-rights/baskerville`.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $iam_roles
     *           The IAM roles to bind as an association to the occupant. For example:
     *           `iam-roles/unit.admin`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Saltoapis\Nebula\Unit\V1\Unit::initOnce();
        parent::__construct($data);
    }

    /**
     * The personal name, forename or given name ("first name"). It could
     * also contain a middle name. First name is not used because the given
     * name is not placed first in some cultures.
     *
     * Generated from protobuf field <code>string given_name = 1;</code>
     * @return string
     */
    public function getGivenName()
    {
        return $this->given_name;
    }

    /**
     * The personal name, forename or given name ("first name"). It could
     * also contain a middle name. First name is not used because the given
     * name is not placed first in some cultures.
     *
     * Generated from protobuf field <code>string given_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setGivenName($var)
    {
        GPBUtil::checkString($var, True);
        $this->given_name = $var;

        return $this;
    }

    /**
     * The surname or family name ("last name"). It could also contain more than
     * one surname so that both matrilineal and patrilineal surnames can be
     * included in one place. Last name is not used because the family name is
     * not placed last in some cultures.
     *
     * Generated from protobuf field <code>optional string family_name = 2;</code>
     * @return string
     */
    public function getFamilyName()
    {
        return isset($this->family_name) ? $this->family_name : '';
    }

    public function hasFamilyName()
    {
        return isset($this->family_name);
    }

    public function clearFamilyName()
    {
        unset($this->family_name);
    }

    /**
     * The surname or family name ("last name"). It could also contain more than
     * one surname so that both matrilineal and patrilineal surnames can be
     * included in one place. Last name is not used because the family name is
     * not placed last in some cultures.
     *
     * Generated from protobuf field <code>optional string family_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFamilyName($var)
    {
        GPBUtil::checkString($var, True);
        $this->family_name = $var;

        return $this;
    }

    /**
     * The email address of the occupant. It must be unique within the
     * unit.
     *
     * Generated from protobuf field <code>optional string email = 3;</code>
     * @return string
     */
    public function getEmail()
    {
        return isset($this->email) ? $this->email : '';
    }

    public function hasEmail()
    {
        return isset($this->email);
    }

    public function clearEmail()
    {
        unset($this->email);
    }

    /**
     * The email address of the occupant. It must be unique within the
     * unit.
     *
     * Generated from protobuf field <code>optional string email = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->email = $var;

        return $this;
    }

    /**
     * The access rights resource names to bind as an association to the
     * occupant. For example:
     * `installations/surelock-homes-hq/units/101/access-rights/baskerville`.
     *
     * Generated from protobuf field <code>repeated string access_rights = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAccessRights()
    {
        return $this->access_rights;
    }

    /**
     * The access rights resource names to bind as an association to the
     * occupant. For example:
     * `installations/surelock-homes-hq/units/101/access-rights/baskerville`.
     *
     * Generated from protobuf field <code>repeated string access_rights = 4;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAccessRights($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->access_rights = $arr;

        return $this;
    }

    /**
     * The IAM roles to bind as an association to the occupant. For example:
     * `iam-roles/unit.admin`.
     *
     * Generated from protobuf field <code>repeated string iam_roles = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getIamRoles()
    {
        return $this->iam_roles;
    }

    /**
     * The IAM roles to bind as an association to the occupant. For example:
     * `iam-roles/unit.admin`.
     *
     * Generated from protobuf field <code>repeated string iam_roles = 5;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setIamRoles($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->iam_roles = $arr;

        return $this;
    }

}

