<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: salto/nebula/user/v1/user.proto

namespace Saltoapis\Nebula\User\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The user object
 *
 * Generated from protobuf message <code>salto.nebula.user.v1.User</code>
 */
class User extends \Google\Protobuf\Internal\Message
{
    /**
     * Resource name of the user. It must have the format of
     * `installations/&#42;&#47;users/&#42;`. For example:
     * `installations/surelock-homes-hq/users/john-watson`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * The name of the parent user of this user.
     * Only users who have had keys shared with them will have this field set.
     *
     * Generated from protobuf field <code>optional string parent = 2;</code>
     */
    protected $parent = null;
    /**
     * The personal name, forename or given name ("first name"). It could
     * also contain a middle name. First name is not used because the given
     * name is not placed first in some cultures.
     *
     * Generated from protobuf field <code>string given_name = 3;</code>
     */
    protected $given_name = '';
    /**
     * The surname or family name ("last name"). It could also contain more than
     * one surname so that both matrilineal and patrilineal surnames can be
     * included in one place. Last name is not used because the family name is
     * not placed last in some cultures.
     *
     * Generated from protobuf field <code>optional string family_name = 4;</code>
     */
    protected $family_name = null;
    /**
     * The display name of the user, formed by concatenating the first and last
     * name values.
     *
     * Generated from protobuf field <code>string display_name = 5;</code>
     */
    protected $display_name = '';
    /**
     * Email address.
     *
     * Generated from protobuf field <code>optional string email = 6;</code>
     */
    protected $email = null;
    /**
     * Activation time independent of any time zone or calendar.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp activate_time = 7;</code>
     */
    protected $activate_time = null;
    /**
     * Expiration time independent of any time zone or calendar.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 8;</code>
     */
    protected $expire_time = null;
    /**
     * The file resource name for the user photo. It must have the
     * format of
     * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     *
     * Generated from protobuf field <code>optional string photo = 9;</code>
     */
    protected $photo = null;
    /**
     * The URI to view the user photo.
     *
     * Generated from protobuf field <code>string photo_uri = 10;</code>
     */
    protected $photo_uri = '';
    /**
     * The card key resource that belongs to the user.
     *
     * Generated from protobuf field <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
     */
    protected $card_key = null;
    /**
     * The app key resource that belongs to the user.
     *
     * Generated from protobuf field <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
     */
    protected $app_key = null;
    /**
     * The wallet key resource that belongs to the user.
     *
     * Generated from protobuf field <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
     */
    protected $wallet_key = null;
    /**
     * The passcode resource that belongs to the user.
     *
     * Generated from protobuf field <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
     */
    protected $passcode = null;
    /**
     * Indicates whether this user is blocked or not. A blocked user cannot
     * perform any admin actions, that is, if they have a management role this
     * will no longer be valid. If the user has a key then it will no longer
     * unlock access points.
     *
     * Generated from protobuf field <code>bool blocked = 14;</code>
     */
    protected $blocked = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Resource name of the user. It must have the format of
     *           `installations/&#42;&#47;users/&#42;`. For example:
     *           `installations/surelock-homes-hq/users/john-watson`.
     *     @type string $parent
     *           The name of the parent user of this user.
     *           Only users who have had keys shared with them will have this field set.
     *     @type string $given_name
     *           The personal name, forename or given name ("first name"). It could
     *           also contain a middle name. First name is not used because the given
     *           name is not placed first in some cultures.
     *     @type string $family_name
     *           The surname or family name ("last name"). It could also contain more than
     *           one surname so that both matrilineal and patrilineal surnames can be
     *           included in one place. Last name is not used because the family name is
     *           not placed last in some cultures.
     *     @type string $display_name
     *           The display name of the user, formed by concatenating the first and last
     *           name values.
     *     @type string $email
     *           Email address.
     *     @type \Google\Protobuf\Timestamp $activate_time
     *           Activation time independent of any time zone or calendar.
     *     @type \Google\Protobuf\Timestamp $expire_time
     *           Expiration time independent of any time zone or calendar.
     *     @type string $photo
     *           The file resource name for the user photo. It must have the
     *           format of
     *           `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     *     @type string $photo_uri
     *           The URI to view the user photo.
     *     @type \Saltoapis\Nebula\User\V1\CardKey $card_key
     *           The card key resource that belongs to the user.
     *     @type \Saltoapis\Nebula\User\V1\AppKey $app_key
     *           The app key resource that belongs to the user.
     *     @type \Saltoapis\Nebula\User\V1\WalletKey $wallet_key
     *           The wallet key resource that belongs to the user.
     *     @type \Saltoapis\Nebula\User\V1\Passcode $passcode
     *           The passcode resource that belongs to the user.
     *     @type bool $blocked
     *           Indicates whether this user is blocked or not. A blocked user cannot
     *           perform any admin actions, that is, if they have a management role this
     *           will no longer be valid. If the user has a key then it will no longer
     *           unlock access points.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Saltoapis\Nebula\User\V1\User::initOnce();
        parent::__construct($data);
    }

    /**
     * Resource name of the user. It must have the format of
     * `installations/&#42;&#47;users/&#42;`. For example:
     * `installations/surelock-homes-hq/users/john-watson`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Resource name of the user. It must have the format of
     * `installations/&#42;&#47;users/&#42;`. For example:
     * `installations/surelock-homes-hq/users/john-watson`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The name of the parent user of this user.
     * Only users who have had keys shared with them will have this field set.
     *
     * Generated from protobuf field <code>optional string parent = 2;</code>
     * @return string
     */
    public function getParent()
    {
        return isset($this->parent) ? $this->parent : '';
    }

    public function hasParent()
    {
        return isset($this->parent);
    }

    public function clearParent()
    {
        unset($this->parent);
    }

    /**
     * The name of the parent user of this user.
     * Only users who have had keys shared with them will have this field set.
     *
     * Generated from protobuf field <code>optional string parent = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * The personal name, forename or given name ("first name"). It could
     * also contain a middle name. First name is not used because the given
     * name is not placed first in some cultures.
     *
     * Generated from protobuf field <code>string given_name = 3;</code>
     * @return string
     */
    public function getGivenName()
    {
        return $this->given_name;
    }

    /**
     * The personal name, forename or given name ("first name"). It could
     * also contain a middle name. First name is not used because the given
     * name is not placed first in some cultures.
     *
     * Generated from protobuf field <code>string given_name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setGivenName($var)
    {
        GPBUtil::checkString($var, True);
        $this->given_name = $var;

        return $this;
    }

    /**
     * The surname or family name ("last name"). It could also contain more than
     * one surname so that both matrilineal and patrilineal surnames can be
     * included in one place. Last name is not used because the family name is
     * not placed last in some cultures.
     *
     * Generated from protobuf field <code>optional string family_name = 4;</code>
     * @return string
     */
    public function getFamilyName()
    {
        return isset($this->family_name) ? $this->family_name : '';
    }

    public function hasFamilyName()
    {
        return isset($this->family_name);
    }

    public function clearFamilyName()
    {
        unset($this->family_name);
    }

    /**
     * The surname or family name ("last name"). It could also contain more than
     * one surname so that both matrilineal and patrilineal surnames can be
     * included in one place. Last name is not used because the family name is
     * not placed last in some cultures.
     *
     * Generated from protobuf field <code>optional string family_name = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setFamilyName($var)
    {
        GPBUtil::checkString($var, True);
        $this->family_name = $var;

        return $this;
    }

    /**
     * The display name of the user, formed by concatenating the first and last
     * name values.
     *
     * Generated from protobuf field <code>string display_name = 5;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * The display name of the user, formed by concatenating the first and last
     * name values.
     *
     * Generated from protobuf field <code>string display_name = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * Email address.
     *
     * Generated from protobuf field <code>optional string email = 6;</code>
     * @return string
     */
    public function getEmail()
    {
        return isset($this->email) ? $this->email : '';
    }

    public function hasEmail()
    {
        return isset($this->email);
    }

    public function clearEmail()
    {
        unset($this->email);
    }

    /**
     * Email address.
     *
     * Generated from protobuf field <code>optional string email = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->email = $var;

        return $this;
    }

    /**
     * Activation time independent of any time zone or calendar.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp activate_time = 7;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getActivateTime()
    {
        return $this->activate_time;
    }

    public function hasActivateTime()
    {
        return isset($this->activate_time);
    }

    public function clearActivateTime()
    {
        unset($this->activate_time);
    }

    /**
     * Activation time independent of any time zone or calendar.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp activate_time = 7;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setActivateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->activate_time = $var;

        return $this;
    }

    /**
     * Expiration time independent of any time zone or calendar.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 8;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getExpireTime()
    {
        return $this->expire_time;
    }

    public function hasExpireTime()
    {
        return isset($this->expire_time);
    }

    public function clearExpireTime()
    {
        unset($this->expire_time);
    }

    /**
     * Expiration time independent of any time zone or calendar.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 8;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpireTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expire_time = $var;

        return $this;
    }

    /**
     * The file resource name for the user photo. It must have the
     * format of
     * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     *
     * Generated from protobuf field <code>optional string photo = 9;</code>
     * @return string
     */
    public function getPhoto()
    {
        return isset($this->photo) ? $this->photo : '';
    }

    public function hasPhoto()
    {
        return isset($this->photo);
    }

    public function clearPhoto()
    {
        unset($this->photo);
    }

    /**
     * The file resource name for the user photo. It must have the
     * format of
     * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     *
     * Generated from protobuf field <code>optional string photo = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setPhoto($var)
    {
        GPBUtil::checkString($var, True);
        $this->photo = $var;

        return $this;
    }

    /**
     * The URI to view the user photo.
     *
     * Generated from protobuf field <code>string photo_uri = 10;</code>
     * @return string
     */
    public function getPhotoUri()
    {
        return $this->photo_uri;
    }

    /**
     * The URI to view the user photo.
     *
     * Generated from protobuf field <code>string photo_uri = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setPhotoUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->photo_uri = $var;

        return $this;
    }

    /**
     * The card key resource that belongs to the user.
     *
     * Generated from protobuf field <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
     * @return \Saltoapis\Nebula\User\V1\CardKey|null
     */
    public function getCardKey()
    {
        return $this->card_key;
    }

    public function hasCardKey()
    {
        return isset($this->card_key);
    }

    public function clearCardKey()
    {
        unset($this->card_key);
    }

    /**
     * The card key resource that belongs to the user.
     *
     * Generated from protobuf field <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
     * @param \Saltoapis\Nebula\User\V1\CardKey $var
     * @return $this
     */
    public function setCardKey($var)
    {
        GPBUtil::checkMessage($var, \Saltoapis\Nebula\User\V1\CardKey::class);
        $this->card_key = $var;

        return $this;
    }

    /**
     * The app key resource that belongs to the user.
     *
     * Generated from protobuf field <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
     * @return \Saltoapis\Nebula\User\V1\AppKey|null
     */
    public function getAppKey()
    {
        return $this->app_key;
    }

    public function hasAppKey()
    {
        return isset($this->app_key);
    }

    public function clearAppKey()
    {
        unset($this->app_key);
    }

    /**
     * The app key resource that belongs to the user.
     *
     * Generated from protobuf field <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
     * @param \Saltoapis\Nebula\User\V1\AppKey $var
     * @return $this
     */
    public function setAppKey($var)
    {
        GPBUtil::checkMessage($var, \Saltoapis\Nebula\User\V1\AppKey::class);
        $this->app_key = $var;

        return $this;
    }

    /**
     * The wallet key resource that belongs to the user.
     *
     * Generated from protobuf field <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
     * @return \Saltoapis\Nebula\User\V1\WalletKey|null
     */
    public function getWalletKey()
    {
        return $this->wallet_key;
    }

    public function hasWalletKey()
    {
        return isset($this->wallet_key);
    }

    public function clearWalletKey()
    {
        unset($this->wallet_key);
    }

    /**
     * The wallet key resource that belongs to the user.
     *
     * Generated from protobuf field <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
     * @param \Saltoapis\Nebula\User\V1\WalletKey $var
     * @return $this
     */
    public function setWalletKey($var)
    {
        GPBUtil::checkMessage($var, \Saltoapis\Nebula\User\V1\WalletKey::class);
        $this->wallet_key = $var;

        return $this;
    }

    /**
     * The passcode resource that belongs to the user.
     *
     * Generated from protobuf field <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
     * @return \Saltoapis\Nebula\User\V1\Passcode|null
     */
    public function getPasscode()
    {
        return $this->passcode;
    }

    public function hasPasscode()
    {
        return isset($this->passcode);
    }

    public function clearPasscode()
    {
        unset($this->passcode);
    }

    /**
     * The passcode resource that belongs to the user.
     *
     * Generated from protobuf field <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
     * @param \Saltoapis\Nebula\User\V1\Passcode $var
     * @return $this
     */
    public function setPasscode($var)
    {
        GPBUtil::checkMessage($var, \Saltoapis\Nebula\User\V1\Passcode::class);
        $this->passcode = $var;

        return $this;
    }

    /**
     * Indicates whether this user is blocked or not. A blocked user cannot
     * perform any admin actions, that is, if they have a management role this
     * will no longer be valid. If the user has a key then it will no longer
     * unlock access points.
     *
     * Generated from protobuf field <code>bool blocked = 14;</code>
     * @return bool
     */
    public function getBlocked()
    {
        return $this->blocked;
    }

    /**
     * Indicates whether this user is blocked or not. A blocked user cannot
     * perform any admin actions, that is, if they have a management role this
     * will no longer be valid. If the user has a key then it will no longer
     * unlock access points.
     *
     * Generated from protobuf field <code>bool blocked = 14;</code>
     * @param bool $var
     * @return $this
     */
    public function setBlocked($var)
    {
        GPBUtil::checkBool($var);
        $this->blocked = $var;

        return $this;
    }

}

