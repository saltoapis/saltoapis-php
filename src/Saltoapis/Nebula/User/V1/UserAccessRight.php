<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: salto/nebula/user/v1/user.proto

namespace Saltoapis\Nebula\User\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The user's access right association
 *
 * Generated from protobuf message <code>salto.nebula.user.v1.UserAccessRight</code>
 */
class UserAccessRight extends \Google\Protobuf\Internal\Message
{
    /**
     * Resource name of the user's access right association. It
     * must have the format of `installations/{@*}users/{@*}access-rights/*`. For
     * example:
     * `installations/surelock-homes-hq/users/john-watson/access-rights/baskerville`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * The access right resource name to bind as an association to the parent
     * access point. For example:
     * `installations/surelock-homes-hq/access-rights/baskerville`.
     *
     * Generated from protobuf field <code>string access_right = 2;</code>
     */
    protected $access_right = '';
    /**
     * Display name of the associated entity. In this case an access right.
     *
     * Generated from protobuf field <code>string display_name = 3;</code>
     */
    protected $display_name = '';
    /**
     * The schedules for the user's access right. If set, this can only be more
     * restrictive than the schedules defined in the associated access right.
     *
     * Generated from protobuf field <code>repeated .salto.nebula.type.Schedule schedules = 4;</code>
     */
    private $schedules;
    /**
     * The computed effective schedules for the user's access right based on the
     * given parent resource.
     *
     * Generated from protobuf field <code>repeated .salto.nebula.type.Schedule effective_schedules = 5;</code>
     */
    private $effective_schedules;
    /**
     * Activation time independent of any time zone or calendar.
     * User access right's association activation time rules:
     * 1. Activation time must be specified in multiples of 10 minutes.
     *    Valid examples: 07:40, 12:30, 18:10. Invalid examples: 12:32, 10:15.
     * 2. If no activation time is provided, the current time is used, truncated to the nearest earlier multiple of 10 minutes.
     *    For example, if the current time is 14:46, the system will use 14:40.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp activate_time = 6;</code>
     */
    protected $activate_time = null;
    /**
     * Expiration time independent of any time zone or calendar.
     * User access right's association expiration time rules:
     * 1. Expiration time must be specified in multiples of 10 minutes.
     *    Valid examples: 07:40, 12:30, 18:10. Invalid examples: 12:32, 10:15.
     * 2. When specifying expiration time, it must:
     *    - Be at least 10 minutes after activation time.
     *    - Always be a multiple of 10 minutes. The system does not round or adjust expiration time for you.
     *      For example, if you attempt to set 10:15, the system will reject it.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp expire_time = 7;</code>
     */
    protected $expire_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Resource name of the user's access right association. It
     *           must have the format of `installations/{@*}users/{@*}access-rights/*`. For
     *           example:
     *           `installations/surelock-homes-hq/users/john-watson/access-rights/baskerville`.
     *     @type string $access_right
     *           The access right resource name to bind as an association to the parent
     *           access point. For example:
     *           `installations/surelock-homes-hq/access-rights/baskerville`.
     *     @type string $display_name
     *           Display name of the associated entity. In this case an access right.
     *     @type array<\Saltoapis\Nebula\Type\Schedule>|\Google\Protobuf\Internal\RepeatedField $schedules
     *           The schedules for the user's access right. If set, this can only be more
     *           restrictive than the schedules defined in the associated access right.
     *     @type array<\Saltoapis\Nebula\Type\Schedule>|\Google\Protobuf\Internal\RepeatedField $effective_schedules
     *           The computed effective schedules for the user's access right based on the
     *           given parent resource.
     *     @type \Google\Protobuf\Timestamp $activate_time
     *           Activation time independent of any time zone or calendar.
     *           User access right's association activation time rules:
     *           1. Activation time must be specified in multiples of 10 minutes.
     *              Valid examples: 07:40, 12:30, 18:10. Invalid examples: 12:32, 10:15.
     *           2. If no activation time is provided, the current time is used, truncated to the nearest earlier multiple of 10 minutes.
     *              For example, if the current time is 14:46, the system will use 14:40.
     *     @type \Google\Protobuf\Timestamp $expire_time
     *           Expiration time independent of any time zone or calendar.
     *           User access right's association expiration time rules:
     *           1. Expiration time must be specified in multiples of 10 minutes.
     *              Valid examples: 07:40, 12:30, 18:10. Invalid examples: 12:32, 10:15.
     *           2. When specifying expiration time, it must:
     *              - Be at least 10 minutes after activation time.
     *              - Always be a multiple of 10 minutes. The system does not round or adjust expiration time for you.
     *                For example, if you attempt to set 10:15, the system will reject it.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Saltoapis\Nebula\User\V1\User::initOnce();
        parent::__construct($data);
    }

    /**
     * Resource name of the user's access right association. It
     * must have the format of `installations/{@*}users/{@*}access-rights/*`. For
     * example:
     * `installations/surelock-homes-hq/users/john-watson/access-rights/baskerville`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Resource name of the user's access right association. It
     * must have the format of `installations/{@*}users/{@*}access-rights/*`. For
     * example:
     * `installations/surelock-homes-hq/users/john-watson/access-rights/baskerville`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The access right resource name to bind as an association to the parent
     * access point. For example:
     * `installations/surelock-homes-hq/access-rights/baskerville`.
     *
     * Generated from protobuf field <code>string access_right = 2;</code>
     * @return string
     */
    public function getAccessRight()
    {
        return $this->access_right;
    }

    /**
     * The access right resource name to bind as an association to the parent
     * access point. For example:
     * `installations/surelock-homes-hq/access-rights/baskerville`.
     *
     * Generated from protobuf field <code>string access_right = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setAccessRight($var)
    {
        GPBUtil::checkString($var, True);
        $this->access_right = $var;

        return $this;
    }

    /**
     * Display name of the associated entity. In this case an access right.
     *
     * Generated from protobuf field <code>string display_name = 3;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Display name of the associated entity. In this case an access right.
     *
     * Generated from protobuf field <code>string display_name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * The schedules for the user's access right. If set, this can only be more
     * restrictive than the schedules defined in the associated access right.
     *
     * Generated from protobuf field <code>repeated .salto.nebula.type.Schedule schedules = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSchedules()
    {
        return $this->schedules;
    }

    /**
     * The schedules for the user's access right. If set, this can only be more
     * restrictive than the schedules defined in the associated access right.
     *
     * Generated from protobuf field <code>repeated .salto.nebula.type.Schedule schedules = 4;</code>
     * @param array<\Saltoapis\Nebula\Type\Schedule>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSchedules($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Saltoapis\Nebula\Type\Schedule::class);
        $this->schedules = $arr;

        return $this;
    }

    /**
     * The computed effective schedules for the user's access right based on the
     * given parent resource.
     *
     * Generated from protobuf field <code>repeated .salto.nebula.type.Schedule effective_schedules = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getEffectiveSchedules()
    {
        return $this->effective_schedules;
    }

    /**
     * The computed effective schedules for the user's access right based on the
     * given parent resource.
     *
     * Generated from protobuf field <code>repeated .salto.nebula.type.Schedule effective_schedules = 5;</code>
     * @param array<\Saltoapis\Nebula\Type\Schedule>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setEffectiveSchedules($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Saltoapis\Nebula\Type\Schedule::class);
        $this->effective_schedules = $arr;

        return $this;
    }

    /**
     * Activation time independent of any time zone or calendar.
     * User access right's association activation time rules:
     * 1. Activation time must be specified in multiples of 10 minutes.
     *    Valid examples: 07:40, 12:30, 18:10. Invalid examples: 12:32, 10:15.
     * 2. If no activation time is provided, the current time is used, truncated to the nearest earlier multiple of 10 minutes.
     *    For example, if the current time is 14:46, the system will use 14:40.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp activate_time = 6;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getActivateTime()
    {
        return $this->activate_time;
    }

    public function hasActivateTime()
    {
        return isset($this->activate_time);
    }

    public function clearActivateTime()
    {
        unset($this->activate_time);
    }

    /**
     * Activation time independent of any time zone or calendar.
     * User access right's association activation time rules:
     * 1. Activation time must be specified in multiples of 10 minutes.
     *    Valid examples: 07:40, 12:30, 18:10. Invalid examples: 12:32, 10:15.
     * 2. If no activation time is provided, the current time is used, truncated to the nearest earlier multiple of 10 minutes.
     *    For example, if the current time is 14:46, the system will use 14:40.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp activate_time = 6;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setActivateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->activate_time = $var;

        return $this;
    }

    /**
     * Expiration time independent of any time zone or calendar.
     * User access right's association expiration time rules:
     * 1. Expiration time must be specified in multiples of 10 minutes.
     *    Valid examples: 07:40, 12:30, 18:10. Invalid examples: 12:32, 10:15.
     * 2. When specifying expiration time, it must:
     *    - Be at least 10 minutes after activation time.
     *    - Always be a multiple of 10 minutes. The system does not round or adjust expiration time for you.
     *      For example, if you attempt to set 10:15, the system will reject it.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp expire_time = 7;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getExpireTime()
    {
        return $this->expire_time;
    }

    public function hasExpireTime()
    {
        return isset($this->expire_time);
    }

    public function clearExpireTime()
    {
        unset($this->expire_time);
    }

    /**
     * Expiration time independent of any time zone or calendar.
     * User access right's association expiration time rules:
     * 1. Expiration time must be specified in multiples of 10 minutes.
     *    Valid examples: 07:40, 12:30, 18:10. Invalid examples: 12:32, 10:15.
     * 2. When specifying expiration time, it must:
     *    - Be at least 10 minutes after activation time.
     *    - Always be a multiple of 10 minutes. The system does not round or adjust expiration time for you.
     *      For example, if you attempt to set 10:15, the system will reject it.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp expire_time = 7;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpireTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expire_time = $var;

        return $this;
    }

}

